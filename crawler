#!/usr/bin/env python3
# coding: utf-8

import logging
import os, signal
from spider.helper import parse_args
from spider.crawler import Crawler

"""
    spider
    ~~~~~~~~~
    
    Crawl ...
        
    :copyleft: 2013 by h3ndrik.
    :license: WTFTPL, see LICENSE for more details.
"""

__version__ = "0.0.2"


def interrupthandler(signum, frame):
    logging.warning("Caught Interrupt: " + signum)
    sys.exit(0)

if __name__ == "__main__":

    # Startup
    logging.info("=== Spider v." + __version__ + " ===")
    if sys.version_info <= (3, 0):
        logging.error('This program will not work with python2')
        sys.exit(1)
    if os.geteuid() == 0:
        logging.warning("Warning, running as root")
    os.nice(19)
    # Set up handlers for signals
    signal.signal(signal.SIGINT, interrupthandler)
    signal.signal(signal.SIGTERM, interrupthandler)
    args = parse_args()

    crawler = Crawler(args.database)

    #args.func(args)  # Broken, work around:
#    print args
    if args.sub == 'add':
        crawler.add(args)
    elif args.sub == 'del':
        crawler.delete(args)
    elif args.sub == 'disable':
        crawler.disable(args)
    elif args.sub == 'enable':
        crawler.enable(args)
    elif args.sub == 'crawl':
        crawler.crawl(args)
    elif args.sub == 'meta':
        crawler.meta(args)
    elif args.sub == 'list':
        crawler.list(args)
    else:
        crawler.crawl(args)

    logging.info("Done. Exiting.")
